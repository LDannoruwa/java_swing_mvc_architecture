/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos.mvc.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pos.mvc.controller.CustomerController;
import pos.mvc.controller.ItemController;
import pos.mvc.controller.OrderController;
import pos.mvc.model.Customer;
import pos.mvc.model.Item;
import pos.mvc.model.Order;
import pos.mvc.model.OrderDetail;

/**
 *
 * @author anush
 */
public class OrderView extends javax.swing.JFrame {

    //initiate variable to store controller 
    private CustomerController customerController;
    private ItemController itemController;
    private OrderController orderController;
    
    private Item tempItem; //to store item which is received from backend
    private Customer tempCustomer; //to store customer which is received from backend
    
    List<OrderDetail> orderDetails = new ArrayList<>();
    double total = 0.0;

    /**
     * Creates new form OrderView
     */
    public OrderView() {
        //initialize controllers
        customerController = new CustomerController();
        itemController = new ItemController();
        orderController = new OrderController();
        
        initComponents();
        
        //load order details
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbl_orderID = new javax.swing.JLabel();
        txt_orderID = new javax.swing.JTextField();
        btn_searchCustomer = new javax.swing.JButton();
        lbl_customerID = new javax.swing.JLabel();
        txt_customerID = new javax.swing.JTextField();
        lbl_CustomerData = new javax.swing.JLabel();
        lbl_customerID1 = new javax.swing.JLabel();
        txt_itemID = new javax.swing.JTextField();
        btn_searchItem = new javax.swing.JButton();
        lbl_ItemData = new javax.swing.JLabel();
        lbl_itemQty = new javax.swing.JLabel();
        txt_itemQty = new javax.swing.JTextField();
        btn_addItem = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_order = new javax.swing.JTable();
        lbl_totalData = new javax.swing.JLabel();
        lbl_order = new javax.swing.JLabel();
        btn_placeOrder = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Order Manage");

        lbl_orderID.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_orderID.setText("Order ID :");

        btn_searchCustomer.setText("Search Customer");
        btn_searchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchCustomerActionPerformed(evt);
            }
        });

        lbl_customerID.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_customerID.setText("Customer ID :");

        lbl_CustomerData.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        lbl_customerID1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_customerID1.setText("Item ID :");

        btn_searchItem.setText("Search Item");
        btn_searchItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchItemActionPerformed(evt);
            }
        });

        lbl_ItemData.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        lbl_itemQty.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_itemQty.setText("QTY:");

        btn_addItem.setText("Add");
        btn_addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addItemActionPerformed(evt);
            }
        });

        tbl_order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbl_order);

        lbl_totalData.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        lbl_order.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_order.setText("Total (Rs) :");

        btn_placeOrder.setText("Place Order");
        btn_placeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_placeOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_itemQty, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_itemQty, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_addItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_customerID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_customerID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addComponent(btn_searchCustomer))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_customerID1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_itemID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btn_searchItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_CustomerData, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(lbl_ItemData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_order, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_totalData, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(134, 134, 134))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(532, 532, 532)
                                        .addComponent(btn_placeOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_orderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_orderID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_customerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_customerID)
                    .addComponent(btn_searchCustomer)
                    .addComponent(lbl_CustomerData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_itemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_customerID1)
                    .addComponent(btn_searchItem)
                    .addComponent(lbl_ItemData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_itemQty)
                    .addComponent(txt_itemQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_addItem))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_totalData)
                    .addComponent(lbl_order)
                    .addComponent(btn_placeOrder))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_searchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchCustomerActionPerformed
        // TODO add your handling code here:
        searchCustomer();
    }//GEN-LAST:event_btn_searchCustomerActionPerformed

    private void btn_searchItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchItemActionPerformed
        // TODO add your handling code here:
        searchItem();
    }//GEN-LAST:event_btn_searchItemActionPerformed

    private void btn_addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addItemActionPerformed
        // TODO add your handling code here:
        addToTable();
    }//GEN-LAST:event_btn_addItemActionPerformed

    private void btn_placeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_placeOrderActionPerformed
        // TODO add your handling code here:
        placeOrder();
    }//GEN-LAST:event_btn_placeOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
 /*  try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderView().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addItem;
    private javax.swing.JButton btn_placeOrder;
    private javax.swing.JButton btn_searchCustomer;
    private javax.swing.JButton btn_searchItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_CustomerData;
    private javax.swing.JLabel lbl_ItemData;
    private javax.swing.JLabel lbl_customerID;
    private javax.swing.JLabel lbl_customerID1;
    private javax.swing.JLabel lbl_itemQty;
    private javax.swing.JLabel lbl_order;
    private javax.swing.JLabel lbl_orderID;
    private javax.swing.JLabel lbl_totalData;
    private javax.swing.JTable tbl_order;
    private javax.swing.JTextField txt_customerID;
    private javax.swing.JTextField txt_itemID;
    private javax.swing.JTextField txt_itemQty;
    private javax.swing.JTextField txt_orderID;
    // End of variables declaration//GEN-END:variables

    private void searchCustomer() {
        try {
            Customer customer = customerController.getCustomer(Integer.valueOf(txt_customerID.getText()));

            if (customer != null) {
                tempCustomer = customer;
                lbl_CustomerData.setText(customer.getName());
            } else {
                JOptionPane.showMessageDialog(this, "Please enter valied Customer Id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void searchItem() {
        try {
            Item item = itemController.getItem(Integer.valueOf(txt_itemID.getText()));
            if (item != null) {
                tempItem = item;
                lbl_ItemData.setText("Name : " + item.getName() + " | QOH : " + item.getQtyOnHand() + " |  Price : " + item.getUnitPrice());
            } else {
                JOptionPane.showMessageDialog(this, "Please enter valied Item Id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(OrderView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private void loadTable() {
        String [] column = {"Item Id", "Item Name", "Qty", "Unit Price", "Sub Total"};
        
        DefaultTableModel dtm = new DefaultTableModel(column, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tbl_order.setModel(dtm);
    }
    
    private void addToTable() {
         if(tempItem != null){
            OrderDetail od = new OrderDetail(-1, tempItem.getId(), 
                    Integer.valueOf(txt_itemQty.getText()), tempItem.getUnitPrice(), tempItem.getName());
            orderDetails.add(od);
            
            DefaultTableModel dtm = (DefaultTableModel) tbl_order.getModel();
            String [] rowData = {Integer.toString(od.getItemId()), 
                od.getName(), 
                Integer.toString(od.getQty()), 
                Double.toString(od.getUnitPrice()), 
                Double.toString(od.getUnitPrice()* od.getQty())};
            dtm.addRow(rowData);
            total += od.getUnitPrice()* od.getQty();
            lbl_totalData.setText(Double.toString(total));
            
            cleanItemData();
            
        } else {
            JOptionPane.showMessageDialog(this, "Please Select Item");
        }
    }
    
    private void cleanItemData() {
        txt_itemID.setText("");
        txt_itemQty.setText("");
        tempItem = null;
        lbl_ItemData.setText("");
    }
    
     private void placeOrder() {
        Order order = new Order(Integer.valueOf(txt_orderID.getText()), tempCustomer.getId(), new Date(), total);
        
        try {
            String result = orderController.placeOrder(order, orderDetails);
            JOptionPane.showMessageDialog(this, result);
        } catch (Exception ex) {
            Logger.getLogger(OrderView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        cleanForm();
     }
     
       private void cleanForm() {
        cleanItemData();
        tempCustomer = null;
        orderDetails = new ArrayList<>();
        total = 0.0;
        lbl_totalData.setText("");
        
        loadTable();
        txt_customerID.setText("");
        txt_orderID.setText("");
        lbl_CustomerData.setText("");
    }
}
